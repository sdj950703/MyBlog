<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="com.myblog.model.Admin">
    <id column="am_id" jdbcType="INTEGER" property="amId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pass" jdbcType="VARCHAR" property="pass" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    am_id, name, tag, img, address, email, pass, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where am_id = #{amId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where am_id = #{amId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myblog.model.Admin">
    insert into admin (am_id, name, tag, 
      img, address, email, 
      pass, phone)
    values (#{amId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{pass,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myblog.model.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="amId != null">
        am_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pass != null">
        pass,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="amId != null">
        #{amId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myblog.model.Admin">
    update admin
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where am_id = #{amId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myblog.model.Admin">
    update admin
    set name = #{name,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where am_id = #{amId,jdbcType=INTEGER}
  </update>
  
  <select id="login" parameterType="com.myblog.model.Admin" resultMap="BaseResultMap">
     select
     <include refid="Base_Column_List" />
     from admin
     where
     email=#{email}
     and
     pass=#{pass}
  
  </select>
  
</mapper>